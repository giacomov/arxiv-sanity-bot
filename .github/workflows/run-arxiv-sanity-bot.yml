name: Run Arxiv Sanity Bot

on:
  schedule:
    # Run with the following schedule, derived from here: https://info.arxiv.org/help/availability.html
    # and adding 1 hour and 15 min to: a) give 1 hour for the release to propagate + b) run at 15 past the hour
    # to avoid the crowded time at the hour (many cron jobs run at the hour):
    # Monday at 01:15 am
    # Tuesday at 01:15 am
    # Wednesday at 01:15 am
    # Thursday at 01:15 am
    # Friday at 01:15 am
    - cron: "15 1 * * 1-5"
  workflow_dispatch:
    inputs:
      window_start:
        description: "Start of the window in days. Ex. 48 means that the window starts 48 hours ago"
        default: "48"
        type: "string"
      window_stop:
        description: "Stop of the window in days. Ex. 24 means that the window stops 24 hours ago"
        default: "24"
        type: "string"

jobs:
  run_arxiv_sanity_bot:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Cache parquet dataframe of processed abstracts
      uses: actions/cache@v3
      with:
        key: arxiv-sanity-bot-cache
        path: |
          posted_abstracts.parquet
          ~/.cache/pip

    - name: Install dependencies
      run: |
        pip install .

    - name: Run Arxiv Sanity Bot
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      run: |
        if [ ${{ inputs.window_start }} != "" ]; then
            arxiv-sanity-bot --window_start ${{ inputs.window_start }} --window_stop ${{ inputs.window_stop }}
        else 
            arxiv-sanity-bot
        fi
       
